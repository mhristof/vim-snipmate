snippet apk
	apk add --no-cache ${1:curl}

snippet apt-get
	ENV DEBIAN_FRONTEND noninteractive
	RUN apt-get update && \
	  apt-get install --yes --no-install-recommends \
	    ${1:} && \
	  rm -rf /var/lib/apt/lists/*

snippet wget
	wget --quiet ${1:} -O ${2:}

snippet curl
	curl --remote-name --silent ${1:}

snippet user
	RUN useradd --user-group --system --uid 999 ${1:jenkins}
	USER $1

snippet terraform
	ARG terraform_version=0.12.23
	ARG terraform_zip=terraform_${terraform_version}_linux_amd64.zip
	ARG terraform_zip_sha256=78fd53c0fffd657ee0ab5decac604b0dea2e6c0d4199a9f27db53f081d831a45
	RUN cd /tmp &&\
	    curl --remote-name --silent https://releases.hashicorp.com/terraform/${terraform_version}/${terraform_zip} &&\
	    sha256sum ${terraform_zip} | grep ${terraform_zip_sha256} &&\
	    unzip ${terraform_zip} &&\
	    mv terraform /usr/bin/ &&\
	    rm ${terraform_zip}

snippet kubectl
	ARG kubectl_version=${1:1.17.4}
	RUN curl --remote-name --silent --location https://storage.googleapis.com/kubernetes-release/release/v${kubectl_version}/bin/linux/amd64/kubectl &&\
	    chmod +x kubectl &&\
	    mv kubectl /usr/bin

snippet awsiamauthenticator
	RUN curl --remote-name --silent --location https://amazon-eks.s3.us-west-2.amazonaws.com/1.15.10/2020-02-22/bin/linux/amd64/aws-iam-authenticator &&\
	    curl --remote-name --silent --location https://amazon-eks.s3.us-west-2.amazonaws.com/1.15.10/2020-02-22/bin/linux/amd64/aws-iam-authenticator.sha256 &&\
	    openssl sha1 -sha256 aws-iam-authenticator &&\
	    chmod +x ./aws-iam-authenticator &&\
	    mv aws-iam-authenticator /usr/bin

snippet docker
	ENV DEBIAN_FRONTEND noninteractive
	RUN apt-get update && \
		apt-get install --yes --no-install-recommends \
		  apt-transport-https \
		  ca-certificates \
		  curl \
		  gnupg-agent \
		  software-properties-common \
		  && \
		curl -fsSL https://download.docker.com/linux/ubuntu/gpg | apt-key add - &&\
		add-apt-repository "deb [arch=amd64] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable" &&\
		apt-get update &&\
		apt-get install --yest --no-install-recommends \
			containerd.io \
			docker-ce \
			docker-ce-cli &&\
		rm -rf /var/lib/apt/lists/*

snippet yumi
	yum install --assumeyes ${1:htop}

snippet amazonjava
	ENV JAVA_HOME "/usr/lib/jvm/java-11-openjdk"
	RUN amazon-linux-extras install java-openjdk11=11 &&\
	  ln -sf "$(alternatives --list | grep '^jre_11_openjdk' | cut -f 3)" /usr/lib/jvm/java-11-openjdk && \
	  echo "==> Java Version: $(java --version)"

snippet pipefail
	SHELL ["/bin/bash", "-o", "pipefail", "-c"]

snippet node
	ENV NODEJS_VERSION 14.15.4
	ENV PATH "/opt/node-v${NODEJS_VERSION}-linux-x64/bin:${PATH}"
	RUN wget https://nodejs.org/download/release/v${NODEJS_VERSION}/node-v${NODEJS_VERSION}-linux-x64.tar.gz && \
	  tar zxf node-v${NODEJS_VERSION}-linux-x64.tar.gz -C /opt && \
	  rm -f node-v${NODEJS_VERSION}-linux-x64.tar.gz && \
	  echo "node version: $(node --version)"
snippet helm
	RUN curl --remote-name --silent --location https://get.helm.sh/helm-v3.5.2-linux-amd64.tar.gz &&\
		tar xvf helm-v3.5.2-linux-amd64.tar.gz &&\
		mv linux-amd64/helm  /usr/bin/ &&\
		chmod +x /usr/bin/helm
