# #!/bin/bash
snippet #!
	#!/bin/bash
	
snippet if
	if [[ ${1:condition} ]]; then
		${2:#statements}
	fi
snippet elif
	elif [[ ${1:condition} ]]; then
		${2:#statements}
snippet for
	for (( ${2:i} = 0; $2 < ${1:count}; $2++ )); do
		${3:#statements}
	done
snippet wh
	while [[ ${1:condition} ]]; do
		${2:#statements}
	done
snippet until
	until [[ ${1:condition} ]]; do
		${2:#statements}
	done
snippet case
	case ${1:word} in
		${2:pattern})
			${3};;
	esac
snippet getopts
	# default values of variables set from params
	flag=0
	param=''

	while :; do
	  case "${1-}" in
	    -h | --help) usage ;;
	    -v | --verbose) set -x ;;
	    --no-color) NO_COLOR=1 ;;
	    -f | --flag) flag=1 ;; # example flag
	    -p | --param) # example named parameter
	      param="${2-}"
	      shift
	      ;;
	    -?*) die "Unknown option: $1" ;;
	    *) break ;;
	  esac
	  shift
	done

	args=("$@")

	# check required params and arguments
	[[ -z "${param-}" ]] && die "Missing required parameter: param"
	[[ ${#args[@]} -eq 0 ]] && die "Missing script arguments"
snippet ver
	[[ $VERBOSE ]] && echo "${1:}"${2:}
snippet ibs
	IFS="$(echo -e "\b\r")";
snippet ifs
	IFS="$(echo -e "\b\r")";
snippet LOG=
	LOG_D=$TMPDIR/$(basename $${0:0} .sh)/$(date +'%s')
	LOG=$LOG_D/$(basename $${0:0} .sh).log;
	[[ -d $LOG_D ]] || mkdir -p $LOG_D;
snippet flog
	function log {
		local msg
		msg="$(date --iso-8601=seconds) [$$] $*"
		[[ $VERBOSE ]] && echo "$msg"
		#echo "$msg" >> /var/log/import_database.log
	}
snippet fex
	function execute {
		[[ $VERBOSE ]] && log "$*"
		[[ $DRY -ne 1 ]] && eval "$*"
	}

snippet noop
	:
snippet awswho
	aws sts get-caller-identity
snippet die
	die() { echo "$*" 1>&2 ; exit 1; }
snippet hgroot
	git rev-parse --show-toplevel
snippet SCRIPT_DIR
	SCRIPT_DIR=$(cd "$(dirname "${BASH_SOURCE[0]}")" &>/dev/null && pwd -P)
snippet cleanup
	trap cleanup SIGINT SIGTERM ERR EXIT

	cleanup() {
	  trap - SIGINT SIGTERM ERR EXIT
	  # script cleanup here
	}
snippet err2file
	2>${1:/dev/null}
