snippet provider-aws
	provider "aws" {
	  profile = "${1:default}"
	  region = "${2:eu-west-2}"
	}
snippet var
	variable "${1:name}" {
	  default = "${2:value}"
	}
snippet ec2
	resource "aws_instance" "${1:name}" {
	  ami = "${2:ami}"
	  key_name = "${3:key_name}"

	  tags {
	  	Name = "${4:name}"
	  }

snippet ssh
	resource "aws_key_pair" "deploy" {
	    key_name   = "deploy-${var.owner}"
	    public_key = "${file("~/.ssh/id_rsa.pub")}"
	}
snippet bucket
	resource "aws_s3_bucket" "${1:name}" {
	  bucket = "${2:name}"
	  acl    = "private"

	  tags {
	    Name        = "$2"
	  }
	}
snippet backend
	terraform {
	  backend "s3" {
		bucket = "${1:bucket_name}"
		key    = "${2:key}"
		region = "${3:${var.region}}"
	  }
	}
snippet amidata
	data "aws_ami" "ubuntu" {
	  most_recent = true

	  filter {
		name   = "name"
		values = ["ubuntu/images/hvm-ssd/ubuntu-xenial-16.04-amd64-server-*"]
	  }

	  filter {
		name   = "virtualization-type"
		values = ["hvm"]
	  }

	  owners = ["099720109477"] # Canonical
	}
snippet network
	resource "aws_vpc" "${1:main}" {
	  cidr_block       = "10.0.0.0/16"
	}

	resource "aws_subnet" "${2:main}" {
	  vpc_id     = "${aws_vpc.$1.id}"
	  cidr_block = "10.0.1.0/24"
	}

snippet security_group
	resource "aws_security_group" "${1:default}" {
	  name        = "${2:name}"
	  description = "${3:description"
	  # vpc_id      = "${aws_vpc.main.id}"

	  ingress {
	    from_port   = 0
	    to_port     = 0
	    protocol    = "-1"
	    cidr_blocks = ["0.0.0.0/0"]
	  }
	  egress {
		from_port       = 22
		to_port         = 22
		protocol        = "TCP"
	  }
	}
snippet ta
	tags {
	  ${1:Name} = ${2:Value}
	}

snippet out
	output "${1:name}" {
		value = ${2:value}
	}

snippet local-file
	resource "local_file" "${1:name}" {
	  content  = "${2:content}"
	  filename = "${path.module}/${3:path}"
	}


snippet local-exec
	provisioner "local-exec" {
		command = "${1:date}"
		interpreter = ["${2:/bin/bash", "-c}"]
		environment = {}
	}

snippet join
	join("${1:,}", ${2:variable})

snippet split
	split("${1:,}", ${2:variable})

snippet replace
	replace(${1:haystack}, ${2:needle}, ${3:new})

snippet dregion
	data "aws_region" "region" {}

snippet dzip
	data "archive_file" "lambda_zip_dir" {
	  type        = "zip"
	  output_path = "${path.module}/${1:out.zip}"
	  source_file = "${path.module}/${2:src}"
	}

snippet diam
	data "aws_iam_policy_document" "$1" {
		statement {
		  sid = "${1:name}"
	
		  actions = [
		    "*"
		  ]
	
		  resources = [
		    "*",
		  ]
		}
	}

snippet diamstatement
	statement {
	  sid = "${1:name}"

	  actions = [
	    "*"
	  ]

	  resources = [
	    "*",
	  ]
	}

snippet rand
	resource "random_id" "id" {
	  byte_length = 8
	}


snippet behav {
	behavior {
	  name = "${1:}"
	  ${2:}
	}
snippet opt
	option {
	  key = "${1:behavior}"
	  value = "${2:NEVER}"
	}
snippet slurp
	data "local_file" "${1:name}" {
		filename = "${path.module}/${2:filename}"
	}
