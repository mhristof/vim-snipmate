snippet export
	echo "${1:var}=${2:value}" >> $GITHUB_ENV
snippet automerge
	- name: automerge
	  uses: mhristof/github-action-automerge@v1.0.1
	  with:
	    GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
snippet ontag
	on:
	  create:
		tags:
		  - v*
snippet release
	- name: Create Release
	  id: create_release
	  uses: actions/create-release@v1
	  env:
	    GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
	  with:
	    tag_name: ${{ github.event.ref }}
	    release_name: Release ${{ github.event.ref }}
	    body: "Hi, this is an automated release"
	    draft: false
	    prerelease: false
snippet assets
	- name: Upload Release Asset
	  uses: actions/upload-release-asset@v1.0.1
	  env:
		GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
	  with:
		upload_url: ${{ steps.create_release.outputs.upload_url }}
		asset_path: ./${1:asset}
		asset_name: $1
		asset_content_type: application/zip
snippet ifreftag
	if: startsWith(github.ref, 'refs/tags')
snippet new
	---
	name: ${1:awesome}

	on:
	  - push

	jobs:
	  build:
	    runs-on: ubuntu-latest
	    steps:
	      - uses: actions/checkout@v2
	      ${2}
snippet checkout
	- uses: actions/checkout@v2
snippet secret
	${{ secrets.${1:name} }}
snippet dockerlogin
	- name: docker login
	  run: echo ${{ secrets.DOCKER_PASSWORD }} | docker login -u ${{ secrets.DOCKER_USERNAME }} --password-stdin
snippet onbranch
	on:
	  push:
	    branches:
	      - ${1:master}
snippet path
	echo "${1:$HOME/.local/bin}" >> $GITHUB_PATH
snippet cleanupbranches
	---
	name: cleanup-branches

	on:
	  pull_request:
		types:
		  - closed

	jobs:
	  build:
		runs-on: ubuntu-latest

		steps:
		  - name: cleanup
			uses: jessfraz/branch-cleanup-action@master
			env:
			  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
